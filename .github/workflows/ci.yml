# -----------------------------------------------------------------------------
# ðŸ§ª Continuous Integration Workflow
#
# Purpose:
#   1. Lint & style-check all Python code with flake8, black, and isort
#   2. Run unit tests (fast, isolated) under pytest
#   3. Optionally validate notebooks for syntax/output issues
#
# Location:
#   .github/workflows/ci.yml
#
# Local reproduction:
#   pip install -r requirements-dev.txt
#   black --check .
#   isort --check-only .
#   flake8 .
#   pytest -q src/test
# -----------------------------------------------------------------------------

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      # --- Checkout code ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Setup Python ---
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # --- Cache dependencies ---
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # --- Install dependencies ---
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      # --- Lint: flake8 ---
      - name: Run flake8
        run: flake8 src scripts notebooks

      # --- Format: black ---
      - name: Check code formatting with black
        run: black --check src scripts notebooks

      # --- Import order: isort ---
      - name: Check import ordering with isort
        run: isort --check-only src scripts notebooks

      # --- Run unit tests ---
      - name: Run pytest (unit only)
        env:
          PYTHONPATH: src
        run: pytest -q src/test --disable-warnings --maxfail=1 -vv

      # --- Optional: validate notebooks ---
      - name: Validate notebooks (syntax only)
        if: always()
        run: |
          pip install nbconvert nbformat
          python -m nbconvert --execute --allow-errors --to notebook \
            --output /dev/null notebooks/05_clustering_and_explainability.ipynb
          python -m nbconvert --execute --allow-errors --to notebook \
            --output /dev/null notebooks/06_modeling_and_explainability.ipynb
